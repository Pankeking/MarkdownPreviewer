{"ast":null,"code":"import _slicedToArray from\"/Users/maddy/Desktop/demo/markdown/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import MarkdownComp from\"./MarkdownComp\";import EditorComp from\"./EditorComp\";// import {Routes, Route, Link, Navigate, withRouter} from 'react-router-dom';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function MainComp(){var InitText='# Welcome to my React Markdown Previewer!\\n\\n'+'## This is a sub-heading...\\n'+'### And here\\'s some other cool stuff:\\n\\n'+'Heres some code, `<div></div>`, between 2 backticks.\\n\\n'+' ```\\n'+'// this is multi-line code:\\n\\n'+'function anotherExample(firstLine, lastLine) {\\n'+'  if (firstLine == \\'```\\' && lastLine == \\'```\\') {\\n'+'    return multiLineCode;\\n'+'  }\\n'+'}\\n'+'```\\n\\n'+'You can also make text **bold**... whoa!\\n'+'Or _italic_.\\n'+'Or... wait for it... **_both!_**\\n'+'And feel free to go crazy ~~crossing stuff out~~.\\n\\n'+'There\\'s also [links](https://www.freecodecamp.org), and\\n'+'> Block Quotes!\\n\\n'+'And if you want to get really crazy, even tables:\\n\\n'+'| Wild Header      | Crazy Header    | Another Header?   |\\n'+'| ------------     | -------------   | -------------     |\\n'+'| Your content can | be here, and it | can be here....   |\\n'+'| And here.        | Okay.           | I think we get it.|\\n\\n'+'- And of course there are lists.\\n'+'  - Some are bulleted.\\n'+'      - With different indentation levels.\\n'+'          - That look like this.\\n\\n'+'1. And there are numbered lists too.\\n'+'1. Use just 1s if you want!\\n'+'1. And last but not least, let\\'s not forget embedded images:\\n\\n'+'![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)';var _useState=useState(InitText),_useState2=_slicedToArray(_useState,2),markdownText=_useState2[0],setMarkdownText=_useState2[1];var handleTextChange=function handleTextChange(text){setMarkdownText(text);};return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-4\",children:[/*#__PURE__*/_jsx(EditorComp,{onChange:handleTextChange,InitText:InitText}),/*#__PURE__*/_jsx(\"div\",{className:\"m-5\"}),/*#__PURE__*/_jsx(MarkdownComp,{markdownText:markdownText})]})});}export default MainComp;","map":{"version":3,"names":["React","useState","MarkdownComp","EditorComp","jsx","_jsx","jsxs","_jsxs","MainComp","InitText","_useState","_useState2","_slicedToArray","markdownText","setMarkdownText","handleTextChange","text","Fragment","children","className","onChange"],"sources":["/Users/maddy/Desktop/demo/markdown/src/components/MainComp.js"],"sourcesContent":["import React, {useState} from \"react\";\n\nimport MarkdownComp from \"./MarkdownComp\";\nimport EditorComp from \"./EditorComp\";\n\n// import {Routes, Route, Link, Navigate, withRouter} from 'react-router-dom';\n\nfunction MainComp() {\n    const InitText = '# Welcome to my React Markdown Previewer!\\n\\n' +\n     '## This is a sub-heading...\\n' +\n     '### And here\\'s some other cool stuff:\\n\\n' +\n     'Heres some code, `<div></div>`, between 2 backticks.\\n\\n' +\n     ' ```\\n' +\n     '// this is multi-line code:\\n\\n' +\n     'function anotherExample(firstLine, lastLine) {\\n' + \n     '  if (firstLine == \\'```\\' && lastLine == \\'```\\') {\\n' +\n     '    return multiLineCode;\\n' + \n     '  }\\n' + \n     '}\\n' + \n     '```\\n\\n' + \n     'You can also make text **bold**... whoa!\\n' +\n     'Or _italic_.\\n' +\n     'Or... wait for it... **_both!_**\\n' +\n     'And feel free to go crazy ~~crossing stuff out~~.\\n\\n' +\n     'There\\'s also [links](https://www.freecodecamp.org), and\\n' +\n     '> Block Quotes!\\n\\n' + \n     'And if you want to get really crazy, even tables:\\n\\n' + \n     '| Wild Header      | Crazy Header    | Another Header?   |\\n' +\n     '| ------------     | -------------   | -------------     |\\n' +\n     '| Your content can | be here, and it | can be here....   |\\n' + \n     '| And here.        | Okay.           | I think we get it.|\\n\\n' +\n     '- And of course there are lists.\\n' +\n     '  - Some are bulleted.\\n' +\n     '      - With different indentation levels.\\n' +\n     '          - That look like this.\\n\\n' + \n     '1. And there are numbered lists too.\\n' +\n     '1. Use just 1s if you want!\\n' +\n     '1. And last but not least, let\\'s not forget embedded images:\\n\\n' +\n     '![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)';\n    const [markdownText, setMarkdownText] = useState(InitText);\n    const handleTextChange = (text) => {\n        setMarkdownText(text);\n    }\n    return(\n        <React.Fragment>\n            <div className=\"container mt-4\">\n                <EditorComp onChange={handleTextChange} InitText={InitText}/>\n                <div className=\"m-5\"></div>\n                <MarkdownComp markdownText={markdownText} />\n            </div>\n        </React.Fragment>\n    )\n}\nexport default MainComp;\n"],"mappings":"wHAAA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,KAAO,OAAO,CAErC,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,MAAO,CAAAC,UAAU,KAAM,cAAc,CAErC;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEA,QAAS,CAAAC,QAAQA,CAAA,CAAG,CAChB,GAAM,CAAAC,QAAQ,CAAG,+CAA+C,CAC/D,+BAA+B,CAC/B,4CAA4C,CAC5C,0DAA0D,CAC1D,QAAQ,CACR,iCAAiC,CACjC,kDAAkD,CAClD,wDAAwD,CACxD,6BAA6B,CAC7B,OAAO,CACP,KAAK,CACL,SAAS,CACT,4CAA4C,CAC5C,gBAAgB,CAChB,oCAAoC,CACpC,uDAAuD,CACvD,4DAA4D,CAC5D,qBAAqB,CACrB,uDAAuD,CACvD,8DAA8D,CAC9D,8DAA8D,CAC9D,8DAA8D,CAC9D,gEAAgE,CAChE,oCAAoC,CACpC,0BAA0B,CAC1B,8CAA8C,CAC9C,sCAAsC,CACtC,wCAAwC,CACxC,+BAA+B,CAC/B,mEAAmE,CACnE,mGAAmG,CACpG,IAAAC,SAAA,CAAwCT,QAAQ,CAACQ,QAAQ,CAAC,CAAAE,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAnDG,YAAY,CAAAF,UAAA,IAAEG,eAAe,CAAAH,UAAA,IACpC,GAAM,CAAAI,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAIC,IAAI,CAAK,CAC/BF,eAAe,CAACE,IAAI,CAAC,CACzB,CAAC,CACD,mBACIX,IAAA,CAACL,KAAK,CAACiB,QAAQ,EAAAC,QAAA,cACXX,KAAA,QAAKY,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC3Bb,IAAA,CAACF,UAAU,EAACiB,QAAQ,CAAEL,gBAAiB,CAACN,QAAQ,CAAEA,QAAS,CAAC,CAAC,cAC7DJ,IAAA,QAAKc,SAAS,CAAC,KAAK,CAAM,CAAC,cAC3Bd,IAAA,CAACH,YAAY,EAACW,YAAY,CAAEA,YAAa,CAAE,CAAC,EAC3C,CAAC,CACM,CAAC,CAEzB,CACA,cAAe,CAAAL,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}